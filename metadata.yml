rules:
  - apiGroups: ["networking.k8s.io"]
    apiVersions: ["v1"]
    resources: ["ingresses"]
    operations: ["CREATE", "UPDATE"]
mutating: false
contextAware: true
contextAwareResources:
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
executionMode: gatekeeper
# Consider the policy for the background audit scans. Default is true. Note the
# intrinsic limitations of the background audit feature on docs.kubewarden.io;
# If your policy hits any limitations, set to false for the audit feature to
# skip this policy and not generate false positives.
backgroundAudit: true
annotations:
  # artifacthub specific:
  io.artifacthub.displayName: Unique Ingress host
  io.artifacthub.resources: Ingress
  io.artifacthub.keywords: ingress, kubewarden
  io.kubewarden.policy.ociUrl: ghcr.io/kubewarden/policies/unique-ingress-policy
  # kubewarden specific:
  io.kubewarden.policy.title: ingress-unique-host
  io.kubewarden.policy.version: 1.0.7
  io.kubewarden.policy.description: Requires all Ingress rule hosts to be unique
  io.kubewarden.policy.author: Kubewarden developers <cncf-kubewarden-maintainers@lists.cncf.io>
  io.kubewarden.policy.url: https://github.com/kubewarden/unique-ingress-policy
  io.kubewarden.policy.source: https://github.com/kubewarden/unique-ingress-policy
  io.kubewarden.policy.license: Apache-2.0
  # The next two annotations are used in the policy report generated by the
  # Audit scanner. Severity indicates policy check result criticality and
  # Category indicates policy category. See more here at docs.kubewarden.io
  io.kubewarden.policy.severity: medium # one of info, low, medium, high, critical. See docs.
  io.kubewarden.policy.category: Resource validation
